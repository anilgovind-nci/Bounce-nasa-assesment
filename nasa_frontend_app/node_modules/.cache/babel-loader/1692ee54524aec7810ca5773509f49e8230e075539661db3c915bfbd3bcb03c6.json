{"ast":null,"code":"var _jsxFileName = \"/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport ImageGrid from './components/ImageGrid';\nimport ImageModal from './components/ImageModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10; // images per page\n\n  const fetchImages = async url => {\n    try {\n      const res = await fetch(url);\n      let data = await res.json();\n      if (!Array.isArray(data)) data = [data];\n      setImages(data);\n      setCurrentPage(1); // reset to page 1 on new fetch\n    } catch (err) {\n      console.error('Fetch failed', err);\n    }\n  };\n  const handleSelectImage = img => {\n    setSelectedImage(img);\n    setShowModal(true);\n  };\n\n  // Calculate which images to show on the current page\n  const indexOfLast = currentPage * pageSize;\n  const indexOfFirst = indexOfLast - pageSize;\n  const currentImages = images.slice(indexOfFirst, indexOfLast);\n  const totalPages = Math.ceil(images.length / pageSize);\n  const goToNextPage = () => {\n    setCurrentPage(page => Math.min(page + 1, totalPages));\n  };\n  const goToPrevPage = () => {\n    setCurrentPage(page => Math.max(page - 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onFetch: fetchImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n      items: currentImages,\n      onSelect: handleSelectImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), images.length > pageSize && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls text-center my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPrevPage,\n        disabled: currentPage === 1,\n        className: \"btn btn-secondary me-2\",\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        disabled: currentPage === totalPages,\n        className: \"btn btn-secondary ms-2\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImageModal, {\n      item: selectedImage,\n      show: showModal,\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"kwSGPep6ZApBzh4OC/kuBxkMr2o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","ImageGrid","ImageModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","images","setImages","selectedImage","setSelectedImage","showModal","setShowModal","currentPage","setCurrentPage","pageSize","fetchImages","url","res","fetch","data","json","Array","isArray","err","console","error","handleSelectImage","img","indexOfLast","indexOfFirst","currentImages","slice","totalPages","Math","ceil","length","goToNextPage","page","min","goToPrevPage","max","children","onFetch","fileName","_jsxFileName","lineNumber","columnNumber","items","onSelect","className","onClick","disabled","item","show","onClose","_c","$RefreshReg$"],"sources":["/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport ImageGrid from './components/ImageGrid';\nimport ImageModal from './components/ImageModal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10; // images per page\n\n  const fetchImages = async (url) => {\n    try {\n      const res = await fetch(url);\n      let data = await res.json();\n      if (!Array.isArray(data)) data = [data];\n      setImages(data);\n      setCurrentPage(1); // reset to page 1 on new fetch\n    } catch (err) {\n      console.error('Fetch failed', err);\n    }\n  };\n\n  const handleSelectImage = (img) => {\n    setSelectedImage(img);\n    setShowModal(true);\n  };\n\n  // Calculate which images to show on the current page\n  const indexOfLast = currentPage * pageSize;\n  const indexOfFirst = indexOfLast - pageSize;\n  const currentImages = images.slice(indexOfFirst, indexOfLast);\n\n  const totalPages = Math.ceil(images.length / pageSize);\n\n  const goToNextPage = () => {\n    setCurrentPage((page) => Math.min(page + 1, totalPages));\n  };\n\n  const goToPrevPage = () => {\n    setCurrentPage((page) => Math.max(page - 1, 1));\n  };\n\n  return (\n    <>\n      <Navbar onFetch={fetchImages} />\n      <ImageGrid items={currentImages} onSelect={handleSelectImage} />\n\n      {/* Pagination controls */}\n      {images.length > pageSize && (\n        <div className=\"pagination-controls text-center my-3\">\n          <button\n            onClick={goToPrevPage}\n            disabled={currentPage === 1}\n            className=\"btn btn-secondary me-2\"\n          >\n            Prev\n          </button>\n          <span>\n            Page {currentPage} of {totalPages}\n          </span>\n          <button\n            onClick={goToNextPage}\n            disabled={currentPage === totalPages}\n            className=\"btn btn-secondary ms-2\"\n          >\n            Next\n          </button>\n        </div>\n      )}\n\n      <ImageModal item={selectedImage} show={showModal} onClose={() => setShowModal(false)} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}