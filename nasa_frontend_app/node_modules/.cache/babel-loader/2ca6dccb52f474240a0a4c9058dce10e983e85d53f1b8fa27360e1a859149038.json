{"ast":null,"code":"var _jsxFileName = \"/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchApodData } from '../api/apod';\nimport ApodCard from '../components/ApodCard';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 10;\nconst Home = () => {\n  _s();\n  const [apods, setApods] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - 29);\n    const format = d => d.toISOString().split('T')[0];\n    const getData = async () => {\n      try {\n        const data = await fetchApodData(format(startDate), format(endDate));\n        setApods(data.reverse());\n        setError(null);\n      } catch (err) {\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, []);\n  const startIdx = (currentPage - 1) * ITEMS_PER_PAGE;\n  const currentItems = apods.slice(startIdx, startIdx + ITEMS_PER_PAGE);\n  const totalPages = Math.ceil(apods.length / ITEMS_PER_PAGE);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NASA APOD Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), currentItems.map(apod => /*#__PURE__*/_jsxDEV(ApodCard, {\n      apod: apod\n    }, apod.date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"VX7eTVzhm5M3LHAYxtr/5q2/ibE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","fetchApodData","ApodCard","Pagination","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","Home","_s","apods","setApods","currentPage","setCurrentPage","loading","setLoading","error","setError","endDate","Date","startDate","setDate","getDate","format","d","toISOString","split","getData","data","reverse","err","startIdx","currentItems","slice","totalPages","Math","ceil","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","apod","date","onPageChange","_c","$RefreshReg$"],"sources":["/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchApodData } from '../api/apod';\nimport ApodCard from '../components/ApodCard';\nimport Pagination from '../components/Pagination';\n\nconst ITEMS_PER_PAGE = 10;\n\nconst Home = () => {\n  const [apods, setApods] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(endDate.getDate() - 29);\n\n    const format = (d) => d.toISOString().split('T')[0];\n\n    const getData = async () => {\n      try {\n        const data = await fetchApodData(format(startDate), format(endDate));\n        setApods(data.reverse());\n        setError(null);\n      } catch (err) {\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, []);\n\n  const startIdx = (currentPage - 1) * ITEMS_PER_PAGE;\n  const currentItems = apods.slice(startIdx, startIdx + ITEMS_PER_PAGE);\n  const totalPages = Math.ceil(apods.length / ITEMS_PER_PAGE);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>NASA APOD Viewer</h1>\n      {currentItems.map(apod => <ApodCard key={apod.date} apod={apod} />)}\n      <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}