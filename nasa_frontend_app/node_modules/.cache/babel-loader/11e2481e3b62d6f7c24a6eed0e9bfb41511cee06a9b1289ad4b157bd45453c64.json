{"ast":null,"code":"var _jsxFileName = \"/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NasaGrid from './components/NasaGrid';\nimport Pagination from './components/Pagination';\nimport ImageModal from './components/ImageModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodItems, setApodItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const itemsPerPage = 6;\n  const apiKey = process.env.REACT_APP_NASA_API_KEY;\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - 29); // last 30 days\n\n        const formatDate = date => date.toISOString().split('T')[0];\n        // const url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${formatDate(startDate)}&end_date=${formatDate(endDate)}`;\n        const url = `http://localhost:3000/api/nasa/apod?count=30`;\n        const res = await fetch(url);\n        const data = await res.json();\n        const images = data.filter(item => item.media_type === 'image').sort((a, b) => new Date(b.date) - new Date(a.date));\n        setApodItems(images);\n      } catch (err) {\n        console.error('Failed to fetch APOD:', err);\n      }\n    };\n    fetchAPOD();\n  }, [apiKey]);\n  const totalPages = Math.ceil(apodItems.length / itemsPerPage);\n  const currentItems = apodItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: apodItems.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NasaGrid, {\n        items: currentItems,\n        onImageClick: setSelectedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), selectedItem && /*#__PURE__*/_jsxDEV(ImageModal, {\n        item: selectedItem,\n        onClose: () => setSelectedItem(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: \"Loading APOD data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uY01IquX3uvX94UEK6zgARo1ims=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NasaGrid","Pagination","ImageModal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apodItems","setApodItems","currentPage","setCurrentPage","selectedItem","setSelectedItem","itemsPerPage","apiKey","process","env","REACT_APP_NASA_API_KEY","fetchAPOD","endDate","Date","startDate","setDate","getDate","formatDate","date","toISOString","split","url","res","fetch","data","json","images","filter","item","media_type","sort","a","b","err","console","error","totalPages","Math","ceil","length","currentItems","slice","children","items","onImageClick","fileName","_jsxFileName","lineNumber","columnNumber","onPageChange","onClose","className","role","_c","$RefreshReg$"],"sources":["/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NasaGrid from './components/NasaGrid';\nimport Pagination from './components/Pagination';\nimport ImageModal from './components/ImageModal';\n\nfunction App() {\n  const [apodItems, setApodItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const itemsPerPage = 6;\n  const apiKey = process.env.REACT_APP_NASA_API_KEY;\n\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - 29); // last 30 days\n\n        const formatDate = (date) => date.toISOString().split('T')[0];\n        // const url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${formatDate(startDate)}&end_date=${formatDate(endDate)}`;\n        const url = `http://localhost:3000/api/nasa/apod?count=30`;\n\n        const res = await fetch(url);\n        const data = await res.json();\n\n        const images = data\n          .filter((item) => item.media_type === 'image')\n          .sort((a, b) => new Date(b.date) - new Date(a.date));\n\n        setApodItems(images);\n      } catch (err) {\n        console.error('Failed to fetch APOD:', err);\n      }\n    };\n\n    fetchAPOD();\n  }, [apiKey]);\n\n  const totalPages = Math.ceil(apodItems.length / itemsPerPage);\n  const currentItems = apodItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  return (\n    <div>\n      {apodItems.length ? (\n        <>\n          <NasaGrid items={currentItems} onImageClick={setSelectedItem} />\n          <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n          {selectedItem && (\n            <ImageModal item={selectedItem} onClose={() => setSelectedItem(null)} />\n          )}\n        </>\n      ) : (\n        <div className=\"text-center mt-5\">\n          <div className=\"spinner-border text-primary\" role=\"status\" />\n          <p className=\"mt-3\">Loading APOD data...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}