{"ast":null,"code":"var _jsxFileName = \"/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NasaGrid from './components/NasaGrid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apodItems, setApodItems] = useState([]);\n  const apiKey = process.env.REACT_APP_NASA_API_KEY;\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - 5);\n        const formatDate = date => date.toISOString().split('T')[0];\n        const url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${formatDate(startDate)}&end_date=${formatDate(endDate)}`;\n        const res = await fetch(url);\n        const data = await res.json();\n\n        // Sort by latest first\n        const sorted = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setApodItems(sorted);\n      } catch (err) {\n        console.error('Failed to fetch APOD:', err);\n      }\n    };\n    fetchAPOD();\n  }, [apiKey]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: apodItems.length ? /*#__PURE__*/_jsxDEV(NasaGrid, {\n      items: apodItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: \"Loading APOD data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"5Gjskoh76M6iLyV9Bo959CDdjLU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NasaGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apodItems","setApodItems","apiKey","process","env","REACT_APP_NASA_API_KEY","fetchAPOD","endDate","Date","startDate","setDate","getDate","formatDate","date","toISOString","split","url","res","fetch","data","json","sorted","sort","a","b","err","console","error","children","length","items","fileName","_jsxFileName","lineNumber","columnNumber","className","role","_c","$RefreshReg$"],"sources":["/Users/anilgovindka/JOB-ASSIGNMENTS/nasa-frontend-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NasaGrid from './components/NasaGrid';\n\nfunction App() {\n  const [apodItems, setApodItems] = useState([]);\n  const apiKey = process.env.REACT_APP_NASA_API_KEY;\n\n  useEffect(() => {\n    const fetchAPOD = async () => {\n      try {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - 5);\n\n        const formatDate = (date) =>\n          date.toISOString().split('T')[0];\n\n        const url = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${formatDate(startDate)}&end_date=${formatDate(endDate)}`;\n\n        const res = await fetch(url);\n        const data = await res.json();\n\n        // Sort by latest first\n        const sorted = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setApodItems(sorted);\n      } catch (err) {\n        console.error('Failed to fetch APOD:', err);\n      }\n    };\n\n    fetchAPOD();\n  }, [apiKey]);\n\n  return (\n    <>\n      {apodItems.length ? (\n        <NasaGrid items={apodItems} />\n      ) : (\n        <div className=\"text-center mt-5\">\n          <div className=\"spinner-border text-primary\" role=\"status\" />\n          <p className=\"mt-3\">Loading APOD data...</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAEjDd,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;QAC1B,MAAMC,SAAS,GAAG,IAAID,IAAI,CAAC,CAAC;QAC5BC,SAAS,CAACC,OAAO,CAACH,OAAO,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QAExC,MAAMC,UAAU,GAAIC,IAAI,IACtBA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAElC,MAAMC,GAAG,GAAG,+CAA+Cd,MAAM,eAAeU,UAAU,CAACH,SAAS,CAAC,aAAaG,UAAU,CAACL,OAAO,CAAC,EAAE;QAEvI,MAAMU,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QAC5B,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;;QAE7B;QACA,MAAMC,MAAM,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIhB,IAAI,CAACgB,CAAC,CAACX,IAAI,CAAC,GAAG,IAAIL,IAAI,CAACe,CAAC,CAACV,IAAI,CAAC,CAAC;QACvEZ,YAAY,CAACoB,MAAM,CAAC;MACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEP,OAAA,CAAAE,SAAA;IAAA+B,QAAA,EACG5B,SAAS,CAAC6B,MAAM,gBACflC,OAAA,CAACF,QAAQ;MAACqC,KAAK,EAAE9B;IAAU;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9BvC,OAAA;MAAKwC,SAAS,EAAC,kBAAkB;MAAAP,QAAA,gBAC/BjC,OAAA;QAAKwC,SAAS,EAAC,6BAA6B;QAACC,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DvC,OAAA;QAAGwC,SAAS,EAAC,MAAM;QAAAP,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EACN,gBACD,CAAC;AAEP;AAACnC,EAAA,CA1CQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}